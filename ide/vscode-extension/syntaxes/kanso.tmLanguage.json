{
  "$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
  "scopeName": "source.kanso",
  "name": "Kanso",
  "patterns": [
    {
      "include": "#comments"
    },
    {
      "include": "#strings"
    },
    {
      "include": "#imports"
    },
    {
      "include": "#keywords"
    },
    {
      "include": "#operators"
    },
    {
      "include": "#numbers"
    },
    {
      "include": "#functions"
    },
    {
      "include": "#structs"
    },
    {
      "include": "#types"
    },
    {
      "include": "#generics"
    },
    {
      "include": "#identifiers"
    },
    {
      "include": "#punctuation"
    }
  ],
  "repository": {
    "comments": {
      "patterns": [
        {
          "name": "comment.line.double-slash",
          "match": "//.*$"
        },
        {
          "name": "comment.block",
          "begin": "/\\*",
          "end": "\\*/"
        }
      ]
    },
    "strings": {
      "patterns": [
        {
          "name": "string.quoted.double",
          "begin": "\"",
          "end": "\"",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        },
        {
          "name": "string.quoted.single",
          "begin": "'",
          "end": "'",
          "patterns": [
            {
              "name": "constant.character.escape",
              "match": "\\\\."
            }
          ]
        }
      ]
    },
    "imports": {
      "patterns": [
        {
          "name": "meta.import",
          "begin": "\\buse\\b",
          "beginCaptures": {
            "0": { "name": "keyword.control.import" }
          },
          "end": ";",
          "patterns": [
            {
              "name": "entity.name.namespace",
              "match": "\\b(std)::"
            },
            {
              "name": "entity.name.type.module",
              "match": "\\b[a-zA-Z_][\\w]*\\b"
            }
          ]
        }
      ]
    },
    "keywords": {
      "patterns": [
        {
          "name": "keyword.control",
          "match": "\\b(use|struct|fn|let|return|mut|reads|writes|contract|ext|emit)\\b"
        },
        {
          "name": "storage.modifier.attribute",
          "match": "#\\[(storage|event|create)\\]"
        },
        {
          "name": "keyword.operator.macro",
          "match": "\\brequire!\\b"
        }
      ]
    },
    "operators": {
      "patterns": [
        {
          "name": "keyword.operator",
          "match": "\\+|\\-|\\*|/|%|\\+=|\\-=|\\*=|/=|%=|==|!=|<=|>=|<|>|&&|\\|\\||->|!"
        }
      ]
    },
    "numbers": {
      "patterns": [
        {
          "name": "constant.numeric.hex",
          "match": "\\b0[xX][0-9a-fA-F]+\\b"
        },
        {
          "name": "constant.numeric.decimal",
          "match": "\\b\\d+\\b"
        }
      ]
    },
    "functions": {
      "patterns": [
        {
          "name": "entity.name.function",
          "match": "\\b(fn|ext\\s+fn)\\s+([a-zA-Z_][\\w]*)"
        }
      ]
    },
    "structs": {
      "patterns": [
        {
          "name": "entity.name.type",
          "match": "\\bstruct\\s+([a-zA-Z_][\\w]*)"
        }
      ]
    },
    "types": {
      "patterns": [
        {
          "name": "entity.name.type.primitive",
          "match": "\\b(U8|U16|U32|U64|U128|U256|Bool|Address|String)\\b"
        },
        {
          "name": "entity.name.type.generic",
          "match": "\\b(Slots|Vector)\\b"
        },
        {
          "name": "entity.name.type",
          "match": "\\b[A-Z][a-zA-Z0-9_]*\\b"
        }
      ]
    },
    "generics": {
      "patterns": [
        {
          "name": "storage.type.generic",
          "match": "<\\s*[A-Z][a-zA-Z0-9_]*(\\s*,\\s*[A-Z][a-zA-Z0-9_]*)*\\s*>"
        }
      ]
    },
    "identifiers": {
      "patterns": [
        {
          "name": "variable.other.property",
          "match": "\\.[a-zA-Z_][\\w]*"
        },
        {
          "name": "variable.other",
          "match": "\\b[a-z_][\\w]*\\b"
        }
      ]
    },
    "punctuation": {
      "patterns": [
        {
          "name": "punctuation.section",
          "match": "[\\(\\)\\{\\}\\[\\]]"
        },
        {
          "name": "punctuation.separator",
          "match": ",|;"
        }
      ]
    }
  },
  "fileTypes": [
    "ka"
  ],
  "uuid": "3b5c4be1-1d88-4c9f-92f0-2b2b7e7ffccd"
}
