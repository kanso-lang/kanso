// Code generated by "stringer -type=NodeType"; DO NOT EDIT.

package ast

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[BAD_CONTRACT_ITEM-1]
	_ = x[BAD_MODULE_ITEM-2]
	_ = x[BAD_EXPR-3]
	_ = x[DOC_COMMENT-4]
	_ = x[COMMENT-5]
	_ = x[CONTRACT-6]
	_ = x[ATTRIBUTE-7]
	_ = x[USE-8]
	_ = x[NAMESPACE-9]
	_ = x[IMPORT_ITEM-10]
	_ = x[STRUCT-11]
	_ = x[STRUCT_FIELD-12]
	_ = x[TYPE-13]
	_ = x[IDENT-14]
	_ = x[FUNCTION-15]
	_ = x[FUNCTION_PARAM-16]
	_ = x[FUNCTION_BLOCK-17]
	_ = x[EXPR_STMT-18]
	_ = x[RETURN_STMT-19]
	_ = x[LET_STMT-20]
	_ = x[ASSIGN_STMT-21]
	_ = x[REQUIRE_STMT-22]
	_ = x[BINARY_EXPR-23]
	_ = x[UNARY_EXPR-24]
	_ = x[CALL_EXPR-25]
	_ = x[FIELD_ACCESS_EXPR-26]
	_ = x[INDEX_EXPR-27]
	_ = x[STRUCT_LITERAL_EXPR-28]
	_ = x[LITERAL_EXPR-29]
	_ = x[IDENT_EXPR-30]
	_ = x[CALLEE_PATH-31]
	_ = x[STRUCT_LITERAL_FIELD-32]
	_ = x[PAREN_EXPR-33]
	_ = x[TUPLE_EXPR-34]
}

const _NodeType_name = "ILLEGALBAD_CONTRACT_ITEMBAD_MODULE_ITEMBAD_EXPRDOC_COMMENTCOMMENTCONTRACTATTRIBUTEUSENAMESPACEIMPORT_ITEMSTRUCTSTRUCT_FIELDTYPEIDENTFUNCTIONFUNCTION_PARAMFUNCTION_BLOCKEXPR_STMTRETURN_STMTLET_STMTASSIGN_STMTREQUIRE_STMTBINARY_EXPRUNARY_EXPRCALL_EXPRFIELD_ACCESS_EXPRINDEX_EXPRSTRUCT_LITERAL_EXPRLITERAL_EXPRIDENT_EXPRCALLEE_PATHSTRUCT_LITERAL_FIELDPAREN_EXPRTUPLE_EXPR"

var _NodeType_index = [...]uint16{0, 7, 24, 39, 47, 58, 65, 73, 82, 85, 94, 105, 111, 123, 127, 132, 140, 154, 168, 177, 188, 196, 207, 219, 230, 240, 249, 266, 276, 295, 307, 317, 328, 348, 358, 368}

func (i NodeType) String() string {
	if i < 0 || i >= NodeType(len(_NodeType_index)-1) {
		return "NodeType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _NodeType_name[_NodeType_index[i]:_NodeType_index[i+1]]
}
